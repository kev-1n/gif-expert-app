{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAKaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAsB/C,OACI,0BAAMC,SAfW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAvBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CAEHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAiBZM,GAjBY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIlC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA2BxC,OApBJC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAGHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAMOqB,EDvB0BK,CAAc1B,GAAlCa,EAJwB,EAI7BN,KAAaa,EAJgB,EAIhBA,QAKrB,OAHAO,QAAQC,IAAIR,GAIR,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KAEEoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAGHH,EAAOJ,KAAM,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACImB,IAAMnB,EAAIC,IACLD,UErBxBoB,EAAe,WAAM,MAIM5C,mBAAS,CAAC,cAJhB,mBAIvB6C,EAJuB,KAIX9C,EAJW,KAY9B,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAIA,4BAES8C,EAAWtB,KAAK,SAAAT,GAAQ,OAEpB,kBAAC,EAAD,CACIA,SAAWA,EACX6B,IAAM7B,UCxBlCgC,IAASC,OACL,kBAAC,EAAD,MAECC,SAASC,eAAe,U","file":"static/js/main.f0f32c48.chunk.js","sourcesContent":["\r\n\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory =  ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=iW5QfwJ0A6ls3GuJOMMR9OcXegJ6d03T`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n   \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (  {title, url} ) => {\r\n\r\n    // console.log( title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   \r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    console.log(loading);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    \r\n                    {\r\n                        images.map(  img  =>(\r\n                            <GifGridItem \r\n                                key={ img.id }\r\n                                { ...img }  \r\n                            />\r\n                        ) )\r\n                    }\r\n                \r\n                \r\n            </div>\r\n        </>    \r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\nuseEffect( () => {\r\n\r\n    getGifs( category )\r\n        .then( imgs => {\r\n\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n                          \r\n\r\n        } )\r\n\r\n}, [category])\r\n\r\n\r\n   \r\n\r\n\r\n    return state\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setcategories(\r\n    //        [ 'HunterxHunter', ...categories]\r\n    //     );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2> \r\n           <AddCategory setCategories= { setCategories } />\r\n           <hr />\r\n\r\n    \r\n\r\n           <ol>\r\n               { \r\n                    categories.map( category => (\r\n\r\n                        <GifGrid \r\n                            category={ category }\r\n                            key={ category }\r\n                        />\r\n                    ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n \n     document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}